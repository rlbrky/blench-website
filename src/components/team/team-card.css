:root {
  --pointer-x: 0;
  --pointer-y: 0;
  --parallax-img-x: 5%;
  --parallax-img-y: 5%;
  --rotate-x: 25deg;
  --rotate-y: -20deg;
}

.card[data-active='true'] {
  display: block;
  transition: transform 0.2s;
}

.card[data-active='true']:hover {
  transition: transform 0s;
  transform: rotateX(calc(var(--pointer-y) * var(--rotate-x)))
    rotateY(calc(var(--pointer-x) * var(--rotate-y)));
  animation: set backwards 0.2s;
}

.card[data-active='true']:hover .card__front img {
  transition: transform 0s;
  translate: calc(var(--pointer-x) * var(--parallax-img-x))
    calc(var(--pointer-y) * var(--parallax-img-y));
  animation: set-img backwards 0.2s;
}

@keyframes set {
  0% {
    transform: rotateX(0deg) rotateY(0deg);
  }
}

@keyframes set-img {
  0% {
    translate: 0 0;
  }
}

.card:not(:hover) img {
  transition: translate 0.2s;
}

:is(.refraction, .spotlight::before) {
  opacity: 0;
  transition: opacity 0.2s ease-out;
}

.card[data-active='true']:hover .refraction,
.card[data-active='true']:hover .spotlight::before {
  opacity: 1;
}

.scene {
  perspective: 1000px;
  display: inline-block;
  margin: 1rem;
}

.card {
  --ratio-x: 0;
  --ratio-y: 0;
  --border: 8cqi;
  --border-color: #ffffff;
  --card-width: 200px;
  
  aspect-ratio: 5 / 7;
  width: var(--card-width);
  container-type: inline-size;
  touch-action: none;
  background: #0000;
  color: #ffffff;
  font-family: 'Sora', sans-serif;
  perspective: 1600px;
  position: relative;
  cursor: pointer;
}

.card img,
.card *::after,
.card *::before {
  will-change: translate, scale, filter;
}

.card button {
  position: absolute;
  z-index: 100;
  inset: 0;
  cursor: pointer;
  -webkit-tap-highlight-color: #0000;
  user-select: none;
  opacity: 0;
  background: transparent;
  border: none;
}

.card *:not(button) {
  pointer-events: none;
}

.card .pattern,
.card .spotlight,
.card .card__rear,
.card .card__content,
.card .card__emboss,
.card .glare-container,
.card .card__front {
  position: absolute;
  inset: 0;
  border-radius: var(--border);
}

.card .card__emboss {
  filter: url(#lighting);
}

.card .card__front,
.card .card__rear {
  backface-visibility: hidden;
}

.card .card__front > *:not(.debug:not(.debug--clipped)) {
  clip-path: inset(0 0 0 0 round var(--border));
}

.card .card__rear {
  clip-path: inset(0 0 0 0 round var(--border));
  --border-color: #000000;
  transform-style: preserve-3d;
  position: absolute;
  inset: 0;
  background: #000000;
  transform: rotateY(180deg) translate3d(0, 0, 1px);
}

.card .card__rear > img,
.card .card__front > .img img {
  width: 100%;
  object-fit: cover;
  height: 100%;
  scale: 1.1;
  position: absolute;
  inset: 0;
}

.card .card__frame {
  position: absolute;
  inset: 0;
  z-index: 2;
  border-radius: var(--border);
}

.card .card__frame * {
  will-change: translate, scale, filter;
}

.card .card__frame h3 {
  margin: 0;
  top: var(--border);
  right: var(--border);
  text-align: right;
  letter-spacing: -0.05em;
  font-weight: 1000;
  line-height: 1;
  z-index: 100;
  position: absolute;
}

.card .card__frame h3 span {
  filter: url(#sticker);
}

.card .card__frame h3 span:first-of-type {
  font-size: 10cqi;
  color: #ffffff;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8), 
               -1px -1px 2px rgba(0, 0, 0, 0.6),
               0 0 8px rgba(0, 0, 0, 0.9);
}

.card .card__frame h3 span:last-of-type {
  font-size: 5cqi;
  color: #ff0000;
  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.9), 
               -1px -1px 2px rgba(0, 0, 0, 0.7),
               0 0 6px rgba(0, 0, 0, 0.8);
}

.card .card__frame img {
  width: 100%;
  object-fit: cover;
  height: 100%;
  scale: 1.1;
  position: absolute;
  inset: 0;
  filter: saturate(0.8) contrast(1.2)
    drop-shadow(0 0 10cqi rgba(0, 0, 0, 0.75));
}

.card:has([aria-pressed='true']) .card__content {
  transform: rotateY(180deg);
}

.card .card__content {
  transition: transform 0.26s ease-out;
  transform-style: preserve-3d;
}

.card .card__emboss {
  position: absolute;
  inset: 0;
  filter: url(#lighting);
  border-radius: var(--border);
  clip-path: inset(0 0 0 0 round var(--border));
}

.card .card__emboss::before {
  content: 'Blench Â© 2025';
  position: absolute;
  bottom: 0;
  left: 50%;
  height: calc(var(--border) * 0.5);
  display: flex;
  place-items: center;
  translate: -50% 0;
  color: #fff;
  font-size: 1.5cqi;
  opacity: 0.8;
  z-index: 100;
}

.card .card__emboss::after {
  content: '';
  position: absolute;
  inset: -1px;
  border: calc((var(--border) * 0.5) + 1px) solid var(--border-color);
  border-radius: var(--border);
  z-index: 99;
}

.card .pattern,
.card .watermark {
  filter: saturate(0.8) contrast(1) brightness(1);
  mask: url(https://assets.codepen.io/605876/figma-texture.png) 50% 50% / 4cqi 4cqi;
  opacity: 0.4;
  mix-blend-mode: multiply;
}

.card .pattern::before {
  content: '';
  position: absolute;
  inset: 0;
  background: #ffffff;
}

.card .refraction {
  position: absolute;
  width: 500%;
  aspect-ratio: 1 / 1;
  bottom: 0;
  left: 0;
  filter: saturate(2);
  will-change: translate, scale, filter;
  background: radial-gradient(
    circle at 0 100%,
    #0000 10%,
    #ff0000,
    #ffffff,
    #000000,
    #0000 60%
  );
  transform-origin: 0 100%;
  scale: min(1, 0.15 + var(--pointer-x) * 0.25);
  translate: clamp(-10%, -10% + var(--pointer-x) * 10%, 10%)
    calc(max(0%, (var(--pointer-y) * -1) * 10%));
}

.card .refraction:nth-of-type(2) {
  bottom: unset;
  top: 0;
  left: unset;
  right: 0;
  scale: min(1, 0.15 + var(--pointer-x) * -0.65);
  translate: clamp(-10%, 10% - var(--pointer-x) * -10%, 10%)
    calc(min(0%, var(--pointer-y) * -10%));
  transform-origin: 100% 0;
  background: radial-gradient(
    circle at 100% 0,
    #0000 10%,
    #ff0000,
    #ffffff,
    #000000,
    #0000 60%
  );
}

.card .glare {
  position: absolute;
  opacity: 0.5;
  inset: 0;
  background: linear-gradient(
    -65deg,
    #0000 0 40%,
    #fff 40% 50%,
    #0000 30% 50%,
    #0000 50% 55%,
    #fff 55% 60%,
    #0000 60% 100%
  );
}

.card .spotlight {
  mix-blend-mode: overlay;
  z-index: 9999999;
  clip-path: inset(0 0 0 0 round var(--border));
}

.card .spotlight::before {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  width: 500%;
  opacity: 0;
  aspect-ratio: 1;
  background: radial-gradient(
    rgba(255, 255, 255, 0.4) 0 2%,
    rgba(0, 0, 0, 0.2) 20%
  );
  filter: brightness(1.2) contrast(1.2);
  translate: calc(-50% + (var(--pointer-x) * 20%))
    calc(-50% + (var(--pointer-y) * 20%));
  z-index: 99999;
}

.card .wordmark {
  position: absolute;
  width: 70%;
  left: 50%;
  translate: -50% 0;
  top: 0;
  height: max-content;
}

.card .wordmark:last-of-type {
  top: unset;
  bottom: 0;
  rotate: 180deg;
}

.card .wordmark img {
  position: static;
  width: 100%;
  height: auto;
}

.card .gemstone {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 50%;
  height: auto;
  translate: -50% -50%;
  filter: hue-rotate(320deg);
}

.card .backdrop {
  width: 100%;
  height: 100%;
  object-fit: cover;
  position: absolute;
  inset: 0;
}

/* Hover effects */
.card:hover {
  transform: scale(1.05);
  transition: transform 0.3s ease;
}

.card .card__front:hover {
  cursor: pointer;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .card {
    --card-width: 180px;
  }
}

@media (max-width: 480px) {
  .card {
    --card-width: 160px;
  }
}